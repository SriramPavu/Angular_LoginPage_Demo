using Microsoft.AspNetCore.Mvc;
using LoginPageDemo.Data;
using LoginPageDemo.Models;

using Microsoft.EntityFrameworkCore;
using LoginPageDemo;
using LoginPageDemo.Services;

namespace LoginPageDemo.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class LoginController : ControllerBase
    {
        private readonly AppDbContext _db;
        private readonly IJwtService _jwt;

        public LoginController(AppDbContext db, IJwtService jwt) { _db = db; _jwt = jwt; }

        public class LoginRequest { public string Email { get; set; } = null!; public string Password { get; set; } = null!; }

        [HttpPost("login")]
        public async Task<IActionResult> Login([FromBody] LoginRequest req)
        {
            var user = await _db.Users.SingleOrDefaultAsync(u => u.Email == req.Email);
            if (user == null) return Unauthorized(new { message = "Invalid credentials" });
            if (!BCrypt.Net.BCrypt.Verify(req.Password, user.PasswordHash)) return Unauthorized(new { message = "Invalid credentials" });

            var token = _jwt.GenerateToken(user);
            return Ok(new { token, email = user.Email, name = user.FullName });
        }
    }
}
